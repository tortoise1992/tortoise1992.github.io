{"version":3,"sources":["pages/xuexiao/components/BasicSituationSchoolArea.js","pages/xuexiao/components/BasicSituationStudentTeacherRatio.js","pages/xuexiao/components/BasicSituationStudentSituation.js","pages/xuexiao/components/BasicInformationLibraryCollection.js","pages/xuexiao/components/StaffSituation.js","pages/xuexiao/components/ManagementTeamSituation.js","pages/xuexiao/index.js"],"names":["myChart","BasicSituationSchoolArea","state","chartData","setChart","data","_this","length","sjzdData","sjjxyfData","sjssData","forEach","item","push","landUseEqually","teachLandEqually","hostelLandEqually","option","tooltip","trigger","axisPointer","lineStyle","color","legend","icon","itemWidth","itemHeight","itemGap","bottom","textStyle","fontSize","grid","top","left","right","containLabel","xAxis","type","boundaryGap","axisLine","width","axisTick","show","splitLine","axisLabel","yAxis","margin","series","name","smooth","normal","areaStyle","echarts","graphic","LinearGradient","offset","shadowColor","shadowBlur","itemStyle","setOption","_this2","this","init","document","getElementById","setState","jsonData","RECORDS","_react_16_8_4_react_default","a","createElement","id","style","height","Component","dataInfo","BasicSituationStudentSituation","row_default","align","textAlign","col_default","span","collegeStudentNum","juniorStudentNum","cadetStudentNum","BasicInformationLibraryCollection","bookNum","BasicSituationStudentTeacherRatio","xAxisData","data1","data2","rate","Math","round","studentNum","teacherNum","baseOption","timeline","axisType","currentIndex","inverse","position","gridIndex","map","value","options","barWidth","label","rich","fontWeight","b","xAxisIndex","yAxisIndex","annual","collegeTeacherNum","ageData","ageJson","ageType","ageNum","xueliData","xueliJson","education","number","xueyuanData","xueyuanJson","sourceType","sourceNum","zhichengData","zhichengJson","vocationName","ItemComp","props","legendData","title","text","orient","x","y","formatter","cur","filter","center","radius","avoidLabelOverlap","labelLine","PureComponent","StaffSituation","datas","i","key","StaffSituation_ItemComp","seriesData","obj","Object","keys","stack","undefined","emphasis","interval","alignWithLabel","ManagementTeamSituation","sexJson","chartType","ManagementTeamSituation_ItemComp","Xuexiao","settings","autoplaySpeed","dots","infinite","slidesToShow","slidesToScroll","vertical","verticalSwiping","beforeChange","currentSlide","nextSlide","afterChange","setTimeout","slider","goTo","carousel_default","assign","ref","className","components_BasicSituationSchoolArea","BasicSituationStudentSituation_BasicSituationStudentSituation","BasicInformationLibraryCollection_BasicInformationLibraryCollection","components_BasicSituationStudentTeacherRatio","StaffSituation_StaffSituation","ManagementTeamSituation_ManagementTeamSituation"],"mappings":"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","file":"static/js/8.b9ca733f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import withRouter from 'umi/withRouter';\nimport echarts from 'echarts';\nimport jsonData from '../../../data/school/学校视角--基本情况--学校面积.json';\n\nlet myChart;\nclass BasicSituationSchoolArea extends Component {\n    state = {\n        chartData: [],\n    }\n    componentDidMount() {\n        myChart = echarts.init(document.getElementById('ZGDBasicSituationSchoolAreaChart'));\n        this.setState({\n            chartData: jsonData.RECORDS\n        },()=>{\n            this.setChart();\n        })\n    }\n    setChart = () => {\n        let data = this.state.chartData || [];\n        if (!data || data.length <= 0) {\n            return;\n        }\n        let sjzdData = [], sjjxyfData = [], sjssData =[];\n        data.forEach(item=>{\n            sjzdData.push(item.landUseEqually);\n            sjjxyfData.push(item.teachLandEqually);\n            sjssData.push(item.hostelLandEqually);\n        });\n        // let xAxisData = [\"教育部标准\",\"本校\",\"标杆院校\"];\n        let xAxisData = [\"教育部标准\",\"本校\"];\n        \n        let option = {\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    lineStyle: {\n                        color: '#57617B'\n                    }\n                }\n            },\n            legend: {\n                icon: 'circle',\n                itemWidth: 14,\n                itemHeight: 5,\n                itemGap: 13,\n                bottom: '4%',\n                textStyle: {\n                    fontSize: 12,\n                    color: '#00cfff'\n                }\n            },\n            grid: {\n                top: '10%',\n                left: '5%',\n                right: '8%',\n                bottom: '15%',\n                containLabel: true\n            },\n            xAxis: [{\n                type: 'category',\n                boundaryGap: false,\n                axisLine: {\n                    lineStyle: {\n                        color: 'rgba(255,255,255,0.49)',\n                        width:0,\n                    }\n                },\n                axisTick: {\n                    show: false\n                },\n                splitLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#8b572a',\n                        type: 'dashed',\n                    }\n                },\n                axisLabel: {\n                    textStyle: {\n                        fontSize: 14,\n                        color: \"#44ffff\"\n                    }\n                },\n                data: xAxisData\n            }],\n            yAxis: [{\n                type: 'value',\n                axisTick: {\n                    lineStyle: {\n                        color: '#8b572a',\n                    }\n                },\n                axisLine: {\n                    show: false,\n                    lineStyle: {\n                        color: 'rgba(255,255,255,0.49)'\n                    }\n                },\n                axisLabel: {\n                    margin: 10,\n                    textStyle: {\n                        fontSize: 14,\n                        color: \"#44ffff\"\n                    }\n                },\n                splitLine: {\n                    show: false\n                }\n            }],\n            series: [{\n                name: '生均占地面积',\n                type: 'line',\n                smooth: true,\n                lineStyle: {\n                    normal: {\n                        width: 1\n                    }\n                },\n                areaStyle: {\n                    normal: {\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                            offset: 0,\n                            color: 'rgba(250, 217, 97, 0.5)'\n                        }, {\n                            offset: 1,\n                            color: 'rgba(250, 217, 97, 0)'\n                        }], false),\n                        shadowColor: 'rgba(0, 0, 0, 0.1)',\n                        shadowBlur: 20\n                    }\n                },\n                itemStyle: {\n                    normal: {\n                        color: 'rgb(250, 217, 97)'\n                    }\n                },\n                data: sjzdData\n            }, {\n                name: '生均教学用房面积',\n                type: 'line',\n                smooth: true,\n                lineStyle: {\n                    normal: {\n                        width: 1\n                    }\n                },\n                areaStyle: {\n                    normal: {\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                            offset: 0,\n                            color: 'rgba(244, 98, 98, 0.5)'\n                        }, {\n                            offset: 1,\n                            color: 'rgba(244, 98, 98, 0)'\n                        }], false),\n                        shadowColor: 'rgba(0, 0, 0, 0.1)',\n                        shadowBlur: 20\n                    }\n                },\n                itemStyle: {\n                    normal: {\n                        color: 'rgb(244, 98, 98)'\n                    }\n                },\n                data: sjjxyfData\n            }, {\n                name: '生均宿舍面积',\n                type: 'line',\n                smooth: true,\n                lineStyle: {\n                    normal: {\n                        width: 1\n                    }\n                },\n                areaStyle: {\n                    normal: {\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                            offset: 0,\n                            color: 'rgba(0, 207, 255, 0.5)'\n                        }, {\n                            offset: 1,\n                            color: 'rgba(0, 207, 255, 0)'\n                        }], false),\n                        shadowColor: 'rgba(0, 0, 0, 0.1)',\n                        shadowBlur: 20\n                    }\n                },\n                itemStyle: {\n                    normal: {\n                        color: 'rgb(0, 207, 255)'\n                    }\n                },\n                data: sjssData\n            }, ]\n        };\n\n        myChart.setOption(option);\n    }\n    render() {\n\n        return (\n            <div id=\"ZGDBasicSituationSchoolAreaChart\" style={{ width: '100%', height: '100%' }}></div>\n        )\n    }\n}\n\nexport default BasicSituationSchoolArea;","import React, {Component} from 'react';\n// import withRouter from 'umi/withRouter';\nimport echarts from 'echarts';\nimport { Row, Col } from 'antd';\nimport jsonData from '../../../data/学校视角--师生比.json';\n\nlet myChart;\n\nclass BasicSituationStudentTeacherRatio extends Component {\n    componentDidMount() {\n        myChart = echarts.init(document.getElementById('ZGDBasicSituationStudentTeacherRatio'));\n\n        let chartData = jsonData.RECORDS.map(item=>{\n            return {\n                name: item.annual,\n                studentNum: item.collegeStudentNum,\n                teacherNum: item.collegeTeacherNum\n            }\n        })\n        this.setState({\n            chartData,\n        },()=>{\n            this.setChart();\n        })\n    }\n\n    setChart = () => {\n        let data = this.state.chartData;\n        if (!data || data.length <= 0) {\n            return;\n        }\n        \n        var colors = ['#0181FF', '#44FFFF', '#23FCAF', '#00BFFF'];\n        let xAxisData = [], data1 = [], data2 = [];\n        data.forEach(item => {\n            let rate = Math.round((item.studentNum/item.teacherNum));\n            xAxisData.push(item.name+\"(1:\"+rate+\")\");\n            data1.push(item.teacherNum);\n            data2.push(item.studentNum);\n        });\n\n        const option = {\n            color: colors,\n            baseOption: {\n                timeline: {\n                    show: false,\n                    axisType: 'category',\n                    currentIndex: 0,\n                    data: [],\n                },\n                grid: [{\n                    show: false,\n                    left: '10%',\n                    top: 10,\n                    bottom: 10,\n                    containLabel: true,\n                    width: '20%',\n                }, {\n                    show: false,\n                    left: '50%',\n                    top: 10,\n                    bottom: 10,\n                    width: '0%',\n                }, {\n                    show: false,\n                    right: '15%',\n                    top: 10,\n                    bottom: 10,\n                    containLabel: true,\n                    width: '20%',\n                },],\n\n                xAxis: [\n                    {\n                        type: 'value',\n                        inverse: true,\n                        axisLine: {\n                            show: false,\n                        },\n                        axisTick: {\n                            show: false,\n                        },\n                        position: 'top',\n                        axisLabel: {\n                            show: false,\n                        },\n                        splitLine: {\n                            show: false,\n                        },\n                    }, {\n                        gridIndex: 1,\n                        show: false,\n                    }, {\n                        gridIndex: 2,\n                        type: 'value',\n                        axisLine: {\n                            show: false,\n                        },\n                        axisTick: {\n                            show: false,\n                        },\n                        position: 'top',\n                        axisLabel: {\n                            show: false,\n                        },\n                        splitLine: {\n                            show: false,\n                        },\n                    },],\n                yAxis: [{\n                    type: 'category',\n                    inverse: true,\n                    position: 'right',\n                    axisLine: {\n                        show: false\n                    },\n                    axisTick: {\n                        show: false\n                    },\n                    axisLabel: {\n                        show: false,\n                        margin: 8,\n                        textStyle: {\n                            color: '#9D9EA0',\n                            fontSize: 14,\n                        },\n\n                    },\n                    data: xAxisData,\n                }, {\n                    gridIndex: 1,\n                    type: 'category',\n                    inverse: true,\n                    position: 'left',\n                    axisLine: {\n                        show: false\n                    },\n                    axisTick: {\n                        show: false\n                    },\n                    axisLabel: {\n                        show: true,\n                        textStyle: {\n                            color: '#ffffff',\n                            fontSize: 14,\n                        },\n\n                    },\n                    data: xAxisData.map(function (value) {\n                        return {\n                            value: value,\n                            textStyle: {\n                                align: 'center',\n                            }\n                        }\n                    }),\n                }, {\n                    gridIndex: 2,\n                    type: 'category',\n                    inverse: true,\n                    position: 'left',\n                    axisLine: {\n                        show: false\n                    },\n                    axisTick: {\n                        show: false\n                    },\n                    axisLabel: {\n                        show: false,\n                        textStyle: {\n                            color: '#9D9EA0',\n                            fontSize: 14,\n                        },\n\n                    },\n                    data: xAxisData,\n                },],\n                series: [],\n\n            },\n\n            options: [],\n\n\n        };\n\n        option.baseOption.timeline.data.push(1);\n        option.options.push({\n            series: [{\n                name: '',\n                type: 'bar',\n                barWidth: '20px',\n                label: {\n                    show: true,\n                    position: 'left',\n                    offset: [0, 0],\n                    textStyle: {\n                        color: '#fff',\n                        fontSize: 14,\n                    },\n                    // formatter: (params)=>{\n                    //     if(params.data.value>params.data.value2){\n                    //         return `{a|${params.data.value}}`\n                    //     } else {\n                    //         return `{b|${params.data.value}}`\n                    //     }\n                    // },\n                    rich:{\n                        a: {\n                            color: 'red',\n                            fontSize: 14,\n                            fontWeight: \"bold\"\n                        },\n                        b: {\n                            color: '#7ED321',\n                            fontSize: 14,\n                            fontWeight: \"bold\"\n                        },\n                    }\n                },\n                itemStyle: {\n                    color: '#0181FF',\n\n                },\n                data: data1,\n            },\n            {\n                name: '',\n                type: 'bar',\n                barWidth: '20px',\n                xAxisIndex: 2,\n                yAxisIndex: 2,\n                label: {\n                    show: true,\n                    position: 'right',\n                    offset: [0, 0],\n                    textStyle: {\n                        color: '#fff',\n                        fontSize: 14,\n                    },\n                    // formatter: (params)=>{\n                    //     if(params.data.value>params.data.value2){\n                    //         return `{a|${params.data.value}}`\n                    //     } else {\n                    //         return `{b|${params.data.value}}`\n                    //     }\n                    // },\n                    rich:{\n                        a: {\n                            color: 'red',\n                            fontSize: 14,\n                            fontWeight: \"bold\"\n                        },\n                        b: {\n                            color: '#7ED321',\n                            fontSize: 14,\n                            fontWeight: \"bold\"\n                        },\n                    }\n                },\n                itemStyle: {\n                    color: '#44FFFF',\n                },\n                data: data2,\n            }\n            ]\n        });\n\n        myChart.setOption(option);\n    };\n\n    render() {\n\n        return (\n            <div style={{width: '100%', height: '100%'}}>\n                <div id=\"ZGDBasicSituationStudentTeacherRatio\" style={{ width: '100%', height: `calc(100% - 30px)` }}></div>\n                <Row style={{height:\"30px\",color:\"#41bfc9\",fontSize:\"14px\",textAlign:\"center\"}}>\n                    <Col span={12}>教师</Col>\n                    <Col span={12}>学生</Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default BasicSituationStudentTeacherRatio;","import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport jsonData from '../../../data/school/学院视角--基本情况--学生情况.json';\n\nconst dataInfo = jsonData.RECORDS[0];\n\nexport default class BasicSituationStudentSituation extends Component {\n  render() {\n    return (\n      <Row type=\"flex\" align=\"middle\" style={{height:\"100%\",textAlign:\"center\",color:\"#fff\"}}>\n        <Col span={8}>2018年</Col>\n        <Col span={8}>\n            <div>学生总人数</div>\n            {/* <div>本科生人数</div> */}\n            <div>专科生人数</div>\n            <div>士官生人数</div>\n        </Col>\n        <Col span={8} style={{color:\"#FADB14\"}}>\n            <div>{dataInfo.collegeStudentNum}人</div>\n            {/* <div>{dataInfo.undergraduateStudentNum}人</div> */}\n            <div>{dataInfo.juniorStudentNum}人</div>\n            <div>{dataInfo.cadetStudentNum}人</div>\n        </Col>\n      </Row>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport jsonData from '../../../data/school/学院视角--基本情况--图书馆藏.json';\n\nconst dataInfo = jsonData.RECORDS[0];\n\nexport default class BasicInformationLibraryCollection extends Component {\n  render() {\n    return (\n      <Row type=\"flex\" align=\"middle\" style={{height:\"100%\",textAlign:\"center\",color:\"#fff\"}}>\n        <Col span={8}>2018年</Col>\n        <Col span={8}>\n            <div>图书总数</div>\n            {/* <div>纸质书</div>\n            <div>数字资源</div> */}\n        </Col>\n        <Col span={8} style={{color:\"#FADB14\"}}>\n            <div>{dataInfo.bookNum}</div>\n            {/* <div>{dataInfo.paperBookNum}</div>\n            <div>{dataInfo.ebookNum}</div> */}\n        </Col>\n      </Row>\n    )\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Row, Col } from 'antd';\nimport echarts from 'echarts';\nimport ageJson from '../../../data/school/学院视角--教职工人员情况--年龄.json';\nimport xueliJson from '../../../data/school/学院视角--教职工人员情况--学历.json';\nimport xueyuanJson from '../../../data/school/学院视角--教职工人员情况--学源.json';\nimport zhichengJson from '../../../data/school/学院视角--教职工人员情况--职称.json';\n\nlet ageData = ageJson.RECORDS.map(item=>{\n    return {\n        name: item.ageType,\n        value: item.ageNum,\n    }\n});\nlet xueliData = xueliJson.RECORDS.map(item=>{\n    return {\n        name: item.education,\n        value: item.number,\n    }\n});\nlet xueyuanData = xueyuanJson.RECORDS.map(item=>{\n    return {\n        name: item.sourceType,\n        value: item.sourceNum,\n    }\n});\nlet zhichengData = zhichengJson.RECORDS.map(item=>{\n    return {\n        name: item.vocationName,\n        value: item.number,\n    }\n});\n\nclass ItemComp extends PureComponent {\n    componentDidMount() {\n        let myChart = echarts.init(document.getElementById(this.props.id));\n        let data = this.props.data || [];\n        // let total = data.map(item=>item.value).reduce((a,b)=>a+b);\n        let legendData = data.map(item=>item.name)\n\n        let option = {\n            title: {\n                text: this.props.name,\n                left:'22%',\n                top:'center',\n                textStyle:{\n                    color:'#00CFFF',\n                    fontSize:'22',\n                    align:'center'\n                }\n            },\n            color: [\"#00CFFF\",\"#04FFC7\",\"#65D62D\",\"#F8E71C\",\"#FF2C2C\",\"#1890FF\",\"#BD10E0\",\"#00E8FF\"],\n            legend: {\n                orient: 'vertical',\n                x: '60%',\n                y: 'center',\n                icon: 'circle',\n                itemWidth: 5,\n                itemHeight: 5,\n                itemGap: 13,\n                textStyle: {\n                    color: \"#00CFFF\",\n                },\n                data:legendData,\n                formatter: (name) => {\n                    let cur = data.filter(item=>item.name===name)[0];\n                    return name + \":\" + cur.value;\n                }\n            },\n            series: [\n                {\n                    name:\"\",\n                    type:'pie',\n                    center: ['30%','50%'],\n                    radius: ['50%', '70%'],\n                    avoidLabelOverlap: false,\n                    label: {\n                        show: false,\n                        position: 'center'\n                    },\n                    labelLine: {\n                        normal: {\n                            show: false\n                        }\n                    },\n                    data:data\n                }\n            ]\n        };\n\n        myChart.setOption(option);\n    }\n    render() {\n        return (\n            <div id={this.props.id} style={{width:\"100%\",height:\"100%\"}}></div>\n        )\n    }\n}\n\nexport default class StaffSituation extends PureComponent {\n  render() {\n        let datas = [\n            { \n                type: \"职称\",\n                data: zhichengData\n            },\n            { \n                type: \"年龄\",\n                data: ageData\n            },\n            { \n                type: \"学源\",\n                data: xueyuanData\n            },\n            { \n                type: \"学历\",\n                data: xueliData\n            },\n        ]\n        return (\n            <Row style={{height:\"100%\"}}>\n                {datas.map((item,i)=>(\n                    <Col span={6} style={{height:\"100%\"}} key={i}>\n                        <ItemComp name={item.type} id={\"ZGDStaffSituationChart\"+i} data={item.data}/>\n                    </Col>\n                ))}\n            </Row>\n        )\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Row, Col } from 'antd';\nimport echarts from 'echarts';\nimport ageJson from '../../../data/school/学院视角--管理队伍情况--年龄.json';\nimport xueliJson from '../../../data/school/学院视角--管理队伍情况--学历.json';\nimport sexJson from '../../../data/school/学院视角--管理队伍情况--性别.json';\nimport zhichengJson from '../../../data/school/学院视角--管理队伍情况--职称.json';\n\n// 管理队伍情况全部无数据\nclass ItemComp extends PureComponent {\n    componentDidMount() {\n        let myChart = echarts.init(document.getElementById(this.props.id));\n        let data = this.props.data || [];\n        // let total = data.map(item=>item.value).reduce((a,b)=>a+b);\n        let xAxisData = [], seriesData, obj = {};\n        data.forEach(item => {\n            xAxisData.push(item.name);\n            Object.keys(item).filter(a=>a!==\"name\").forEach(b=>{\n                if(obj[b]){\n                    obj[b].push(item[b]);\n                } else {\n                    obj[b] = [item[b]]\n                }\n            })\n        });\n        let legendData = Object.keys(obj);\n        seriesData = legendData.map(item=>{\n            return {\n                name:item,\n                type:this.props.type || 'line',\n                stack: this.props.type===\"bar\"?\"a\":undefined,\n                barWidth: \"20px\",\n                avoidLabelOverlap: false,\n                label: {\n                    normal: {\n                        show: false,\n                        position: 'center'\n                    },\n                    emphasis: {\n                        show: true,\n                        textStyle: {\n                            fontSize: '30',\n                            fontWeight: 'bold'\n                        }\n                    }\n                },\n                labelLine: {\n                    normal: {\n                        show: false\n                    }\n                },\n                data:obj[item]\n            }\n        })\n        let option = {\n            color: [\"#3DB1FF\",\"#BD10E0\",\"#FADB14\",\"#D89C5D\",\"#FF2C2C\",\"#65D62D\"],\n            legend: {\n                data: legendData,\n                bottom: 5,\n                icon: \"circle\",\n                itemWidth: 5,\n                itemHeight: 5,\n                textStyle:{\n                    color:\"#00CFFF\",\n                }\n            },\n            grid: {\n                top:20,\n                left: 20,\n                right: 20,\n                bottom: 30,\n                containLabel: true\n            },\n            xAxis:  {\n                type: 'category',\n                data: xAxisData,\n                axisLine:{\n                    lineStyle:{\n                        color: \"#379fb7\",\n                    }\n                },\n                axisLabel:{\n                    color: \"#379fb7\",\n                    interval: 0,\n                },\n                axisTick: {\n                    alignWithLabel: true\n                }\n            },\n            yAxis: {\n                type: 'value',\n                axisLine:{\n                    show:false,\n                    lineStyle:{\n                        color: \"#379fb7\",\n                    }\n                },\n                axisLabel:{\n                    color: \"#379fb7\",\n                },\n                splitLine:{\n                    // show:false,\n                    lineStyle: {\n                        color: \"#379fb7\",\n                        type: \"dashed\"\n                    }\n                }\n            },\n            series: seriesData\n        };\n\n        myChart.setOption(option);\n    }\n    render() {\n        return (\n            <div id={this.props.id} style={{width:\"100%\",height:\"100%\"}}></div>\n        )\n    }\n}\n\nexport default class ManagementTeamSituation extends PureComponent {\n  render() {\n        let datas = [\n            { \n                type: \"人数\",\n                data: sexJson.RECORDS,\n                chartType: \"bar\"\n            },\n            { \n                type: \"职称\",\n                data: zhichengJson.RECORDS,\n                chartType: \"line\"\n            },\n            { \n                type: \"年龄\",\n                data: ageJson.RECORDS,\n                chartType: \"bar\"\n            },\n            { \n                type: \"学历\",\n                data: xueliJson.RECORDS,\n                chartType: \"line\"\n            },\n        ]\n        return (\n            <Row style={{height:\"100%\"}}>\n                {datas.map((item,i)=>(\n                    <Col span={6} style={{height:\"100%\"}} key={i}>\n                        <ItemComp name={item.type} type={item.chartType} id={\"ZGDManagementTeamSituationChart\"+i} data={item.data}/>\n                    </Col>\n                ))}\n            </Row>\n        )\n  }\n}\n","import React, { Component } from 'react'\nimport { Carousel} from 'antd'\nimport Xuexiaomianji from './components/BasicSituationSchoolArea'\nimport Xueshengqingkuang from './components/BasicSituationStudentSituation'\nimport Tushu from './components/BasicInformationLibraryCollection'\nimport Shengshibi from './components/BasicSituationStudentTeacherRatio'\nimport Jiaozhigong from './components/StaffSituation'\nimport Team from './components/ManagementTeamSituation'\nexport default class Xuexiao extends Component {\n  render() {\n    let autoplaySpeed = 40000;\n        const settings = {\n            // autoplay: true,\n            autoplaySpeed,\n            dots: true,\n            infinite: false,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            vertical: true,\n            verticalSwiping: true,\n            beforeChange: function (currentSlide, nextSlide) {\n                // console.log(\"before change\", currentSlide, nextSlide);\n            },\n            afterChange: (currentSlide) => {\n                if (currentSlide === 4) {\n                    setTimeout(() => {\n                        if (this.slider && this.slider.goTo) {\n                            this.slider.goTo(0)\n                        }\n                    }, autoplaySpeed)\n                }\n            },\n        };\n    return (\n      <Carousel ref={slider => (this.slider = slider)} {...settings} >\n        <div>          \n          <div className='item-wrapper'>\n            <div className='item-box'>\n              <div className='item-title'>\n                <span>\n                基本情况-学校面积\n                            </span>\n\n              </div>\n              <div className='item-chart'>\n                <Xuexiaomianji></Xuexiaomianji>\n              </div>              \n            </div>\n          </div>\n          <div className='item-wrapper'>\n            <div className='item-box'>\n              <div className='item-title'>\n                <span>\n                基本情况-学生情况\n                            </span>\n\n              </div>\n              <div className='item-chart'>\n              <Xueshengqingkuang></Xueshengqingkuang>\n              </div>              \n            </div>\n          </div>\n          <div className='item-wrapper'>\n            <div className='item-box'>\n              <div className='item-title'>\n                <span>\n                基本情况-图书馆藏\n                            </span>\n\n              </div>\n              <div className='item-chart'>\n              <Tushu></Tushu>\n              </div>              \n            </div>\n          </div>\n          <div className='item-wrapper'>\n            <div className='item-box'>\n              <div className='item-title'>\n                <span>\n                基本情况-生师比\n                            </span>\n\n              </div>\n              <div className='item-chart'>\n              <Shengshibi></Shengshibi>\n              </div>              \n            </div>\n          </div>\n          <div className='item-wrapper-4'>\n            <div className='item-box'>\n                <div className='item-title'>\n                  <span>\n                  教职工人员情况\n                              </span>\n\n                </div>\n                <div className='item-chart'>\n                  <Jiaozhigong></Jiaozhigong>\n                </div>              \n              </div>\n          </div>\n          <div className='item-wrapper-4'>\n            <div className='item-box'>\n                <div className='item-title'>\n                  <span>\n                  管理队伍情况\n                              </span>\n\n                </div>\n                <div className='item-chart'>\n                <Team></Team>\n                </div>              \n              </div>\n          </div>\n        </div>\n        {/* 每一页的划分 */}        \n        \n      </Carousel>\n    )\n  }\n}\n"],"sourceRoot":""}